<?xml version="1.0" encoding="utf-8"?>

<compositor>
  <!-- tilesX * 8 / tilesY * 8 -->
  <!--<buffer name="b_PerTileStorage" type="2d" relative_size="1" width="0.25" height="0.25">
    <internal_format>red32f</internal_format>
    <source_format>red</source_format>
    <source_type>float</source_type>
    <binding>0</binding>
    <filter param="min_filter">nearest</filter>
    <filter param="mag_filter">nearest</filter>
  </buffer>-->

  <buffer name="b_PerTileStorage" type="2d" relative_size="1" width="0.25" height="0.25">
    <internal_format>red32i</internal_format>
    <source_format>redi</source_format>
    <source_type>int</source_type>
    <binding>0</binding>
    <filter param="min_filter">nearest</filter>
    <filter param="mag_filter">nearest</filter>
  </buffer>
  
  <!--precompute tiles in row / column as width and height-->
  <!--x = screenBuf.x / 32 (ceil) | y = screenBuf.y / 32 (ceil), 32 is our tile size -->
  <buffer name="b_computeShaderTrigger" type="2d" relative_size="1" width="0.03125" height="0.03125">
    <internal_format>red</internal_format>
    <source_format>red</source_format>
    <source_type>ubyte</source_type>
  </buffer>

  <shader name="computeLightTile_fs" type="fragment">
    <version>420</version>
    <file>Shaders/lightTiling.frag</file>
  </shader>

  <uniform name="u_countPointLight" type="int">
    <value>0</value>
  </uniform>

  <uniform name="u_countDirectionalLight" type="int">
    <value>0</value>
  </uniform>
  
  <uniform name="u_countShadowDirectionalLight" type="int">
    <value>0</value>
  </uniform>

  <uniform name="u_countShadowPointLight" type="int">
    <value>0</value>
  </uniform>
  
  <!--<uniform name="u_viewMat" type="mat4"></uniform>
  <uniform name="u_projMat" type="mat4"></uniform>
  <uniform name="u_viewProjMat" type="mat4"></uniform>-->
  <uniform name="u_projMat" type="mat4"></uniform>
  
  <uniform name="u_arrayDirectionalLight" type="int" size="1" isArray="1" />
  <uniform name="u_arrayShadowDirectionalLight"  type="int" size="1" isArray="1" />
  
  <!--<uniform name="u_arrayPointLight" type="int" size="512" isArray="1" />-->
  <uniform name="u_arrayPointLight" type="int" size="256" isArray="1" />
  <uniform name="u_arrayShadowPointLight" type="int" size="6" isArray="1" />
  
  <!-- Currently set visible light maximum to 128 -->
  <!-- Intel HD4400 max ubo size 32768 bytes -->
  <uniform_buffer name="u_lightsBuffer" data_variance="dynamic" size="128">
    <!--position-->
    <value type="vec3">1.0 1.0 1.0</value>
    <!--radius-->
    <value type="float">1.0</value>
    <!--color-->
    <value type="vec3">1.0 1.0 1.0</value>
    <!--padding-->
    <value type="float">0.0</value>
    <!--dirFromLight-->
    <value type="vec3">1.0 1.0 1.0</value>
    <!--padding-->
    <value type="float">0.0</value>
    <!-- 12 bytes -->

    <!--shadow cube index for 6 faces-->
    <value type="int">
      <array>24</array>
      <!-- due to the limitation of ubo, need to use 4 times the space for 6 ints -->
    </value>
    <!-- 12 + 24 = 36 bytes -->
    <!-- total = 36 * 128 / 1024 = 4.5KB < 32KB -->
  </uniform_buffer>

</compositor>